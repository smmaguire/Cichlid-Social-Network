ct <- table(group.included, lda.se$class)
ct
lda.se<-lda(Group~amBNST.Sum+alBNST.Sum+pmBNST.Sum+plBNST.Sum+MPOA.Sum+pvAMY,data=impute.data,na.action=na.omit)
lda.se
lda.se<-lda(Group~Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency+Intro.frequency,data=data,na.action=na.omit)
group.included<-data$Group[as.numeric(row.names(lda.se$posterior))]
ct <- table(group.included, lda.se$class)
diag(prop.table(ct, 1))
lda.se<-lda(Group~Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency+Intro.frequency,data=data,na.action=na.omit)
lda.se<-lda(Group~Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency+Intro.frequency,data=data,na.action=na.omit,CV=TRUE)
group.included<-data$Group[as.numeric(row.names(lda.se$posterior))]
ct <- table(group.included, lda.se$class)
diag(prop.table(ct, 1))
sum(diag(prop.table(ct)))
lda.se
lda.se$posterior
lda1.scores<-lda.se$posterior
group.included
names(data)
data$Animal[as.numeric(row.names(lda.se$posterior))]
lda1.scores$Animal<-data$Animal[as.numeric(row.names(lda.se$posterior))]
lda1.scores<-as.data.frame(lda.se$posterior)
lda1.scores
lda1.scores$Animal<-data$Animal[as.numeric(row.names(lda.se$posterior))]
lda1.scores
left_join(data,lda1.scores,by=Animal)
left_join(data,lda1.scores,by='Animal')
data<-left_join(data,lda1.scores,by='Animal')
lda.se<-lda(Group~Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency+Intro.frequency,data=data,na.action=na.omit)
lda.se
str(lda.se)
predict(lda.se)
predict(lda.se)$x
lda1.scores<-as.data.frame(predict(lda.se)$x)
lda1.scores$Animal<-data$Animal[as.numeric(row.names(lda.se$posterior))]
lda1.scores
data$Animal[as.numeric(row.names(lda.se$posterior))]
lda1.scores<-as.data.frame(predict(lda.se)$x)
lda1.scores$Animal<-data$Animal[as.numeric(row.names(lda1.scores))]
data<-left_join(data,lda1.scores,by='Animal')
data
ggplot(data,aes(x=LD1,col=Group))+geom_hist()
ggplot(data,aes(x=LD1,col=Group))+geom_histogram()
ggplot(data,aes(x=LD1,col=Group))+geom_density()
plot(lda.se)
ggplot(data,aes(x=LD1,y=Mount.latency,col=Group))+geom_point()+theme_bw()
ggplot(data,aes(x=LD1,y=Mount.latency,col=Group))+geom_point()+theme_bw()+geom_smooth(method="lm")
ggplot(data,aes(x=LD1,y=Mount.latency))+geom_point(col=Group)+theme_bw()+geom_smooth(method="lm")
ggplot(data,aes(x=LD1,y=Mount.latency))+geom_point(aes(col=Group))+theme_bw()+geom_smooth(method="lm")
ggplot(data,aes(x=LD1,y=amBNST.Sum))+geom_point(aes(col=Group))+theme_bw()+geom_smooth(method="lm")
ggplot(data,aes(x=LD1,y=alBNST.Sum))+geom_point(aes(col=Group))+theme_bw()+geom_smooth(method="lm")
ggplot(data,aes(x=LD1,y=pmBNST.Sum))+geom_point(aes(col=Group))+theme_bw()+geom_smooth(method="lm")
ggplot(data,aes(x=LD1,y=plBNST.Sum))+geom_point(aes(col=Group))+theme_bw()+geom_smooth(method="lm")
ggplot(data,aes(x=LD1,y=MPOA.Sum))+geom_point(aes(col=Group))+theme_bw()+geom_smooth(method="lm")
ggplot(data,aes(x=LD1,y=pdAMY))+geom_point(aes(col=Group))+theme_bw()+geom_smooth(method="lm")
lm(pmBNST.Sum~LD1*Group,data=data)
summary(lm(pmBNST.Sum~LD1*Group,data=data))
summary(lm(pmBNST.Sum~LD1+Group,data=data))
summary(lm(pmBNST.Sum~LD1,data=data))
ggplot(data,aes(x=LD1,y=pvAMY))+geom_point(aes(col=Group))+theme_bw()+geom_smooth(method="lm")
summary(lm(plBNST.Sum~Group+LD1,data=data))
summary(lm(plBNST.Sum~Group*LD1,data=data))
summary(lm(plBNST.Sum~Group+LD1,data=data))
summary(lm(pmBNST.Sum~Group+LD1,data=data))
qqnorm(pmBNST)
qqnorm(data$pmBNST.Sum)
qqline(data$pmBNST.Sum)
shapiro.test(data$pmBNST.Sum)
qqnorm(log10(data$pmBNST.Sum))
qqnorm(log10(data$pmBNST.Sum+1))
qqline(data$pmBNST.Sum)
qqline(log10(data$pmBNST.Sum+1)
qqnorm(log10(data$pmBNST.Sum+1))
qqline(log10(data$pmBNST.Sum+1))
shapiro.test(log10(data$pmBNST.Sum+1))
summary(lm(log10(pmBNST.Sum+1)~Group+LD1,data=data))
names(data)
summary(lm(log10(pmBNST.Sum+1)~Mount.latency)
summary(lm(log10(pmBNST.Sum+1)~Mount.latency))
summary(lm(log10(pmBNST.Sum+1)~Mount.latency))
summary(lm(log10(pmBNST.Sum+1)~Mount.latency,data=data))
m1<-lm(log10(pmBNST.Sum+1)~Mount.latency,data=data)
summary(m1)
m1<-lm(log10(pmBNST.Sum+1)~1,data=data)
summary(m1)
m2<-lm(log10(pmBNST.Sum+1)~Mount.latency,data=data)
m2
anova(m1,m2)
m1<-lm(log10(pmBNST.Sum+1)~1,data=data)
summary(m1)
m2<-lm(log10(pmBNST.Sum+1)~Mount.latency,data=data)
anova(m1,m2)
data
?complete.cases
data
complete.cases(data[,3:8])
data[complete.cases(data[,3:8]),]
mdata<-data[complete.cases(data[,3:8]),]
m1<-lm(log10(pmBNST.Sum+1)~1,data=mdata)
summary(m1)
m2<-lm(log10(pmBNST.Sum+1)~Mount.latency,data=mdata)
anova(m1,m2)
summary(m2)
names(mdata)
m2<-lm(log10(pmBNST.Sum+1)~Intro.latency,data=mdata)
summary(m2)
m2<-lm(log10(pmBNST.Sum+1)~Ejac.latency,data=mdata)
summary(m2)
m2<-lm(log10(pmBNST.Sum+1)~PEI,data=mdata)
summary(m2)
m2<-lm(log10(pmBNST.Sum+1)~Mount.frequency,data=mdata)
summary(m2)
m2<-lm(log10(pmBNST.Sum+1)~Mount.latency,data=mdata)
m2<-lm(log10(pmBNST.Sum+1)~Mount.latency,data=mdata)
summary(m2)
names(mdata)
m2<-lm(log10(pmBNST.Sum+1)~Intro.frequency,data=mdata)
summary(m2)
m2<-lm(log10(pmBNST.Sum+1)~Mount.frequency,data=mdata)
summary(m2)
anova(m1,m2)
m1<-lm(log10(pmBNST.Sum+1)~Mount.frequency,data=mdata)
summary(m1)
m2<-lm(log10(pmBNST.Sum+1)~Mount.frequency*Mount.latency,data=mdata)
summary(m2)
m2<-lm(log10(pmBNST.Sum+1)~Mount.frequency+Mount.latency,data=mdata)
summary(m2)
anova(m1,m2)
m2<-lm(log10(pmBNST.Sum+1)~Mount.frequency+PEI,data=mdata)
summary(m2)
m2<-lm(log10(pmBNST.Sum+1)~Mount.frequency*PEI,data=mdata)
summary(m2)
names(mdata)
m1<-lm(log10(pmBNST.Sum+1)~Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency+Intro.frequency,data=mdata)
summary(m1)
m1<-lm(log10(pmBNST.Sum+1)~(Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency+Intro.frequency)^2,data=mdata)
summary(m1)
m1<-lm(log10(pmBNST.Sum+1)~Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency+Intro.frequency,data=mdata)
summary(m1)
m1<-lm(log10(pmBNST.Sum+1)~Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency,data=mdata)
summary(m1)
m1<-lm(log10(pmBNST.Sum+1)~Mount.latency+Intro.latency+Ejac.latency+Mount.frequency,data=mdata)
summary(m1)
m1<-lm(log10(pmBNST.Sum+1)~Mount.latency+Ejac.latency+Mount.frequency,data=mdata)
summary(m1)
m1<-lm(log10(pmBNST.Sum+1)~Mount.latency+Mount.frequency,data=mdata)
summary(m1)
m1<-lm(log10(pmBNST.Sum+1)~Mount.frequency,data=mdata)
summary(m1)
rm(list=ls())
setwd("C:/Users/sm43382/Desktop")
list.files(pattern=".csv")
data<-read.csv("jont.csv")
names(data)[1]<-"Animal"
library(MASS)
bad<-as.data.frame(which(data=="-",arr.ind=TRUE))
bad2<-as.data.frame(which(data=="?",arr.ind=TRUE))
for(i in 1:length(bad2[,1])){
row<-bad$row[i]
col<-bad$col[i]
data[row,col]<-NA
}
for(col in 3:8){
data[,col]<-as.numeric(data[,col])
}
data[,3:8]<-as.numeric(data[,3:8])
for(col in 3:8){
data[,col]<-as.numeric(data[,col])
}
lda.se<-lda(Group~Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency+Intro.frequency,data=data,na.action=na.omit)
group.included<-data$Group[as.numeric(row.names(lda.se$posterior))]
ct <- table(group.included, lda.se$class)
diag(prop.table(ct, 1))
lda.se<-lda(Group~Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency+Intro.frequency,data=data,na.action=na.omit,CV=TRUE)
group.included<-data$Group[as.numeric(row.names(lda.se$posterior))]
ct <- table(group.included, lda.se$class)
diag(prop.table(ct, 1))
sum(diag(prop.table(ct)))
ct
lda.se<-lda(Group~Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency+Intro.frequency,data=data,na.action=na.omit,CV=TRUE)
group.included<-data$Group[as.numeric(row.names(lda.se$posterior))]
ct <- table(group.included, lda.se$class)
ct
diag(prop.table(ct, 1))
sum(diag(prop.table(ct)))
lda1.scores<-as.data.frame(predict(lda.se)$x)
lda1.scores$Animal<-data$Animal[as.numeric(row.names(lda1.scores))]
lda1.scores<-as.data.frame(predict(lda.se)$x)
lda.se<-lda(Group~Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency+Intro.frequency,data=data,na.action=na.omit)
lda1.scores<-as.data.frame(predict(lda.se)$x)
lda1.scores$Animal<-data$Animal[as.numeric(row.names(lda1.scores))]
data<-left_join(data,lda1.scores,by='Animal')
ggplot(data,aes(x=LD1,col=Group))+geom_density()
ggplot(data,aes(x=LD1,y=pvAMY))+geom_point(aes(col=Group))+theme_bw()+geom_smooth(method="lm")
qqnorm(log10(data$pmBNST.Sum+1))
qqline(log10(data$pmBNST.Sum+1))
shapiro.test(log10(data$pmBNST.Sum+1))
summary(lm(log10(pmBNST.Sum+1)~Group+LD1,data=data))
mdata<-data[complete.cases(data[,3:8]),]
m1<-lm(log10(pmBNST.Sum+1)~Mount.frequency,data=mdata)
summary(m1)
plot(lda.se)
data
summary(lda.se)
lda.se
lda.se<-lda(Group~Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency+Intro.frequency,data=data,na.action=na.omit)
data<-read.csv("jont.csv")
names(data)[1]<-"Animal"
library(MASS)
bad<-as.data.frame(which(data=="-",arr.ind=TRUE))
bad
for(i in 1:length(bad[,1])){
row<-bad$row[i]
col<-bad$col[i]
data[row,col]<-NA
}
for(i in 1:length(bad2[,1])){
row<-bad$row[i]
col<-bad$col[i]
data[row,col]<-NA
}
for(col in 3:8){
data[,col]<-as.numeric(data[,col])
}
lda.se<-lda(Group~Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency+Intro.frequency,data=data,na.action=na.omit,CV=TRUE)
group.included<-data$Group[as.numeric(row.names(lda.se$posterior))]
ct <- table(group.included, lda.se$class)
diag(prop.table(ct, 1))
# total percent correct
sum(diag(prop.table(ct)))
lda.se<-lda(Group~Mount.latency+Intro.latency+Ejac.latency+PEI+Mount.frequency+Intro.frequency,data=data,na.action=na.omit)
lda1.scores<-as.data.frame(predict(lda.se)$x)
lda1.scores$Animal<-data$Animal[as.numeric(row.names(lda1.scores))]
data<-left_join(data,lda1.scores,by='Animal')
ggplot(data,aes(x=LD1,col=Group))+geom_density()
ggplot(data,aes(x=LD1,y=pvAMY))+geom_point(aes(col=Group))+theme_bw()+geom_smooth(method="lm")
qqnorm(log10(data$pmBNST.Sum+1))
qqline(log10(data$pmBNST.Sum+1))
rm(list=ls())
setwd("//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/community level")
lapply(c("sna","doMC","dplyr"),require,character.only=TRUE)
load('permutation_data_with_walktrap.RDATA')
plot.perm.fnc<-function(perms,title){
require(ggplot2)
plotDataGroup<-data.frame("firstQ"=vector(),"thirdQ"=vector(),"correlation"=vector(),
"group"=vector(),"pval"=vector())
count<-1
for (perm in perms) {
firstQ<-vector()
thirdQ<-vector()
testVal<-vector()
for(comp in perm[[1]]){
firstQ<-c(firstQ,summary(comp$dist)[2])
thirdQ<-c(thirdQ,summary(comp$dist)[5])
testVal<-c(testVal,comp$testval)
}
plotDataTemp<-(cbind(firstQ,thirdQ,correlation=testVal,group=LETTERS[count],pval=perm[[2]],deparse.level=1))
rownames(plotDataTemp)<-NULL
plotDataTemp<-as.data.frame(plotDataTemp)
plotDataGroup<-rbind(plotDataGroup,plotDataTemp)
count<-count+1
plotDataGroup$firstQ<-as.numeric(as.character(plotDataGroup$firstQ))
plotDataGroup$thirdQ<-as.numeric(as.character(plotDataGroup$thirdQ))
plotDataGroup$correlation<-as.numeric(as.character(plotDataGroup$correlation))
polydata<-as.data.frame(cbind(times=c(rep(c('1-2','2-3','3-4','4-5','5-6','6-7'),length(perms)),rep(rev(c('1-2','2-3','3-4','4-5','5-6','6-7')),length(perms))),points=c(plotDataGroup$firstQ,rev(plotDataGroup$thirdQ)),group=c(as.character(plotDataGroup$group),rev(as.character(plotDataGroup$group)))))
polydata$points<-as.numeric(as.character(polydata$points))
plotDataGroup$timeComp<-as.factor(rep(c('1-2','2-3','3-4','4-5','5-6','6-7'),length(perms)))
}
plotDataGroup$pval<-as.numeric(as.character(plotDataGroup$pval))
plotDataGroup$pvalPlot<-ifelse(plotDataGroup$pval>.01,.05,NA)
groupPlot<-ggplot(plotDataGroup,aes(x=timeComp,y=correlation,col=group,group=group))
groupOnly<-groupPlot+geom_point()+geom_line()+geom_polygon(data=polydata,aes(x=times,y=points,group=group,fill=group),alpha=.5)+ggtitle(title)+xlab("Days Compared")+geom_point(aes(y=pvalPlot+correlation),col='black',shape=8)
return(groupOnly)
}
plot.perm.fnc(list(groupA.group,groupB.group,groupC.group,groupD.group,groupE.group),"group only")
plot.perm.fnc(list(groupA.group.sex,groupB.group.sex,groupC.group.sex,groupD.group.sex,groupE.group.sex),"group and sex")
plot.perm.fnc(list(groupA.adj.group,groupB.adj.group,groupC.adj.group,groupD.adj.group,groupE.adj.group),"group and adj group")
plot.perm.fnc(list(groupA.adj.group.sex,groupB.adj.group.sex,groupC.adj.group.sex,groupD.adj.group.sex,groupE.adj.group.sex),"group,adj group and sex")
plot.perm.fnc(list(groupA.sex,groupB.sex,groupC.sex,groupD.sex,groupE.sex),"sex only")
plot.perm.fnc(list(groupA.random,groupB.random,groupC.random,groupD.random,groupE.random),"Random")
plot.perm.fnc.violin<-function(perms,title){
require(ggplot2)
plotDataGroup<-data.frame("firstQ"=vector(),"thirdQ"=vector(),"correlation"=vector(),
"group"=vector(),"pval"=vector())
count<-1
dist<-vector()
group.dist<-vector()
comp.dist<-vector()
for (perm in perms) {
firstQ<-vector()
thirdQ<-vector()
testVal<-vector()
name.count<-1
for(comp in perm[[1]]){
firstQ<-c(firstQ,summary(comp$dist)[2])
thirdQ<-c(thirdQ,summary(comp$dist)[5])
testVal<-c(testVal,comp$testval)
dist<-c(dist,comp$dist)
group.dist<-c(group.dist,rep(LETTERS[count],length(comp$dist)))
comp.dist<-c(comp.dist,rep(names(perm[[1]])[name.count],length(comp$dist)))
name.count<-name.count+1
}
plotDataTemp<-(cbind(firstQ,thirdQ,correlation=testVal,group=LETTERS[count],pval=perm[[2]],deparse.level=1))
rownames(plotDataTemp)<-NULL
plotDataTemp<-as.data.frame(plotDataTemp)
plotDataGroup<-rbind(plotDataGroup,plotDataTemp)
count<-count+1
}
plotDataGroup$firstQ<-as.numeric(as.character(plotDataGroup$firstQ))
plotDataGroup$thirdQ<-as.numeric(as.character(plotDataGroup$thirdQ))
plotDataGroup$correlation<-as.numeric(as.character(plotDataGroup$correlation))
plotDataGroup$timeComp<-as.factor(rep(c('1 2','2 3','3 4','4 5','5 6','6 7'),length(perms)))
dist.data<-data.frame(dist,timeComp=comp.dist,group=group.dist)
violin<-ggplot(dist.data,aes(x=timeComp,y=dist,col=group))
vplot<-violin+geom_violin()+geom_point(data=plotDataGroup,aes(y=correlation,x=timeComp))+facet_wrap(~group)+ggtitle(title)
return(vplot)
}
plot.perm.fnc.violin(list(groupA.group,groupB.group,groupC.group,groupD.group,groupE.group),"group only")
plot.perm.fnc.violin(list(groupA.group.sex,groupB.group.sex,groupC.group.sex,groupD.group.sex,groupE.group.sex),"group and sex")
plot.perm.fnc.violin(list(groupA.adj.group,groupB.adj.group,groupC.adj.group,groupD.adj.group,groupE.adj.group),"group and adj group")
plot.perm.fnc.violin(list(groupA.adj.group.sex,groupB.adj.group.sex,groupC.adj.group.sex,groupD.adj.group.sex,groupE.adj.group.sex),"group,adj group and sex")
plot.perm.fnc.violin(list(groupA.sex,groupB.sex,groupC.sex,groupD.sex,groupE.sex),"sex only")
plot.perm.fnc.violin(list(groupA.random,groupB.random,groupC.random,groupD.random,groupE.random),"Random")
plot.perm.fnc.violin(list(groupA.walktrap,groupB.walktrap,groupC.walktrap,groupD.walktrap,groupE.walktrap),"Walktrap")
plot.perm.fnc.violin(list(groupA.walktrap.sex,groupB.walktrap.sex,groupC.walktrap.sex,groupD.walktrap.sex,groupE.walktrap.sex),"Walktrap+sex")
plot.perm.fnc.violin(list(groupA.lp,groupB.lp,groupC.lp,groupD.lp,groupE.lp),"label propogation")
plot.perm.fnc.violin(list(groupA.lp.sex,groupB.lp.sex,groupC.lp.sex,groupD.lp.sex,groupE.lp.sex),"label propogation & sex")
pdf("violin_plots_permutation.pdf")
plot.perm.fnc.violin(list(groupA.group,groupB.group,groupC.group,groupD.group,groupE.group),"group only")
plot.perm.fnc.violin(list(groupA.group.sex,groupB.group.sex,groupC.group.sex,groupD.group.sex,groupE.group.sex),"group and sex")
plot.perm.fnc.violin(list(groupA.adj.group,groupB.adj.group,groupC.adj.group,groupD.adj.group,groupE.adj.group),"group and adj group")
plot.perm.fnc.violin(list(groupA.adj.group.sex,groupB.adj.group.sex,groupC.adj.group.sex,groupD.adj.group.sex,groupE.adj.group.sex),"group,adj group and sex")
plot.perm.fnc.violin(list(groupA.sex,groupB.sex,groupC.sex,groupD.sex,groupE.sex),"sex only")
plot.perm.fnc.violin(list(groupA.random,groupB.random,groupC.random,groupD.random,groupE.random),"Random")
plot.perm.fnc.violin(list(groupA.walktrap,groupB.walktrap,groupC.walktrap,groupD.walktrap,groupE.walktrap),"Walktrap")
plot.perm.fnc.violin(list(groupA.walktrap.sex,groupB.walktrap.sex,groupC.walktrap.sex,groupD.walktrap.sex,groupE.walktrap.sex),"Walktrap+sex")
plot.perm.fnc.violin(list(groupA.lp,groupB.lp,groupC.lp,groupD.lp,groupE.lp),"label propogation")
plot.perm.fnc.violin(list(groupA.lp.sex,groupB.lp.sex,groupC.lp.sex,groupD.lp.sex,groupE.lp.sex),"label propogation & sex")
dev.off()
rm(list=ls())
setwd("/Volumes/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/individual level")
setwd("//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/individual level")
source('//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/community level/refactored_functions_simulation.R')
source('//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/raw data/iGraph data pullout_updated.R')
source('//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/raw data/iGraph data pullout_updated.R')
source('//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/community level/refactored_functions_simulation.R')
source('//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/raw data/iGraph data pullout_updated.R')
setwd("//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/raw data")
source('//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/community level/refactored_functions_simulation.R')
source('//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/raw data/iGraph data pullout_updated.R')
source('//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/raw data/iGraph data pullout_updated.R')
install.packages('igraph')
setwd("/Volumes/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/individual level")
source('//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/community level/refactored_functions_simulation.R')
source('//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/raw data/iGraph data pullout_updated.R')
attributes<-getWTcom(networkList,matrixList)
template<-read.csv("/Volumes/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/individual level/template.csv")
setwd("//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/individual level")
template<-read.csv("/Volumes/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/individual level/template.csv")
template<-read.csv("//files.ccbb.utexas.edu/hofmannlab/Shared/All projects/N. multifasciatus Social Networks/individual level/template.csv")
for(gname in names(networkList)){
m<-matrixList[[gname]]
g<-networkList[[gname]]
attr<-attributes[[gname]]
degM<-degree_from_sex(m,"M",attr)
degF<-degree_from_sex(m,"F",attr)
cc<-transitivity(g,type="weighted")
ccdf<-data.frame(unique=V(g)$name,cc=cc)
pr<-data.frame(unique=names(page.rank(g)$vector),pageRank=page.rank(g)$vector)
attr$day<-as.numeric(strsplit(gname,"t")[[1]][2])
attr<-dplyr::left_join(attr,degM,by="unique")
attr<-dplyr::left_join(attr,degF,by="unique")
attr<-dplyr::left_join(attr,ccdf,by="unique")
attr<-dplyr::left_join(attr,pr,by="unique")
template<-rbind(template,attr)
}
ind.data<-template[-1,]
ind.data<-mutate(ind.data,manip= ifelse(unique=="A2M1"|unique=="B3M1"|unique=="C5M1"|unique=="D1M1"|unique=="E5M1","manipulated","non-manipulated"))
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()+theme_bw()
day1.data<-filter(ind.data,day==1)
day1.data$sub_group<-as.character(day1.data$community)
in.group<-vector()
for(i in 1:nrow(day1.data)){
if(day1.data$sub_group[i]=="A"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="A2M1"]) in.group<-c(in.group,"in.group") else
if(day1.data$sub_group[i]=="A"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="A2M1"]) in.group<-c(in.group,"out.group") else
if(day1.data$sub_group[i]=="B"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="B3M1"]) in.group<-c(in.group,"in.group") else
if(day1.data$sub_group[i]=="B"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="B3M1"]) in.group<-c(in.group,"out.group") else
if(day1.data$sub_group[i]=="C"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="C5M1"]) in.group<-c(in.group,"in.group") else
if(day1.data$sub_group[i]=="C"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="C5M1"]) in.group<-c(in.group,"out.group") else
if(day1.data$sub_group[i]=="D"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="D1M1"]) in.group<-c(in.group,"in.group") else
if(day1.data$sub_group[i]=="D"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="D1M1"]) in.group<-c(in.group,"out.group") else
if(day1.data$sub_group[i]=="E"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="E5M1"]) in.group<-c(in.group,"in.group") else
if(day1.data$sub_group[i]=="E"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="E5M1"]) in.group<-c(in.group,"out.group")
}
day.1.data<-filter(ind.data,day==1)
day.1.data$sub_group<-as.character(day1.data$community)
in.group<-vector()
for(i in 1:nrow(day.1.data)){
if(day1.data$sub_group[i]=="A"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="A2M1"]) in.group<-c(in.group,"in.group") else
if(day1.data$sub_group[i]=="A"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="A2M1"]) in.group<-c(in.group,"out.group") else
if(day1.data$sub_group[i]=="B"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="B3M1"]) in.group<-c(in.group,"in.group") else
if(day1.data$sub_group[i]=="B"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="B3M1"]) in.group<-c(in.group,"out.group") else
if(day1.data$sub_group[i]=="C"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="C5M1"]) in.group<-c(in.group,"in.group") else
if(day1.data$sub_group[i]=="C"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="C5M1"]) in.group<-c(in.group,"out.group") else
if(day1.data$sub_group[i]=="D"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="D1M1"]) in.group<-c(in.group,"in.group") else
if(day1.data$sub_group[i]=="D"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="D1M1"]) in.group<-c(in.group,"out.group") else
if(day1.data$sub_group[i]=="E"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="E5M1"]) in.group<-c(in.group,"in.group") else
if(day1.data$sub_group[i]=="E"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="E5M1"]) in.group<-c(in.group,"out.group")
}
tojoin<-data.frame(unique=day1.data$unique,in.group)
ind.data2<-left_join(ind.data,tojoin,by="unique")
ggplot(ind.data2,aes(x=factor(day),y=indegree_from_F,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)
day.1.data<-filter(ind.data,day==1)
day.1.data$sub_group<-as.character(day.1.data$community)
in.group<-vector()
for(i in 1:nrow(day.1.data)){
if(day.1.data$sub_group[i]=="A"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="A2M1"]) in.group<-c(in.group,"in.group") else
if(day.1.data$sub_group[i]=="A"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="A2M1"]) in.group<-c(in.group,"out.group") else
if(day.1.data$sub_group[i]=="B"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="B3M1"]) in.group<-c(in.group,"in.group") else
if(day.1.data$sub_group[i]=="B"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="B3M1"]) in.group<-c(in.group,"out.group") else
if(day.1.data$sub_group[i]=="C"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="C5M1"]) in.group<-c(in.group,"in.group") else
if(day.1.data$sub_group[i]=="C"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="C5M1"]) in.group<-c(in.group,"out.group") else
if(day.1.data$sub_group[i]=="D"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="D1M1"]) in.group<-c(in.group,"in.group") else
if(day.1.data$sub_group[i]=="D"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="D1M1"]) in.group<-c(in.group,"out.group") else
if(day.1.data$sub_group[i]=="E"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="E5M1"]) in.group<-c(in.group,"in.group") else
if(day.1.data$sub_group[i]=="E"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="E5M1"]) in.group<-c(in.group,"out.group")
}
tojoin<-data.frame(unique=day.1.data$unique,in.group)
ind.data2<-left_join(ind.data,tojoin,by="unique")
ggplot(ind.data2,aes(x=factor(day),y=indegree_from_F,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)
ind.data2
ggplot(ind.data2,aes(x=factor(day),y=outdegree_from_M,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)
ggplot(ind.data2,aes(x=factor(day),y=outdegree_to_M,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)
ggplot(ind.data2,aes(x=factor(day),y=outdegree_from_M,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)
names(ind.data2)
ggplot(ind.data2,aes(x=factor(day),y=indegree_from_M,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)
ind.data<-mutate(ind.data,manip= ifelse(unique=="A2M1"|unique=="B3M1"|unique=="C5M1"|unique=="D1M1"|unique=="E5M1","manipulated","non-manipulated"))
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()+theme_bw()
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()+theme_bw()
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()+theme_bw()+ylab("Displays towards females")
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()+theme_bw()+ylab("Displays towards females (outdegree)")
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()+theme_bw()+ylab("Outdegree towards female")
names(ind.data)
ggplot(ind.data,aes(x=factor(day),y=indegree_from_F,col=manip))+geom_boxplot()+theme_bw()+ylab("Indegree from female")
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_M,col=manip))+geom_boxplot()+theme_bw()+ylab("Outdegree towards males")
ggplot(ind.data,aes(x=factor(day),y=indegree_from_F,col=manip))+geom_boxplot()+theme_bw()+ylab("Outdegree towards female")
ggplot(ind.data,aes(x=factor(day),y=indegree_from_M,col=manip))+geom_boxplot()+theme_bw()+ylab("Outdegree towards female")
ggplot(ind.data,aes(x=factor(day),y=indegree_from_M,col=manip))+geom_boxplot()+theme_bw()+ylab("indegree from male")
names(ind.data)
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_F,col=manip,group=sex))+geom_boxplot()+theme_bw()+ylab("Outdegree towards female")
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()+theme_bw()+ylab("Outdegree towards female")+facet_grid(~sex)
which(ind.data$se=="A")
which(ind.data$sex=="A")
which(ind.data$sex=="A",arr.ind=T)
which(ind.data$sex=="A")
ind.data<-ind.data[-which(ind.data$sex=="A")]
ind.data<-mutate(ind.data,manip= ifelse(unique=="A2M1"|unique=="B3M1"|unique=="C5M1"|unique=="D1M1"|unique=="E5M1","manipulated","non-manipulated"))
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()+theme_bw()+ylab("Outdegree towards female")+facet_grid(~sex)
ind.data<-ind.data[-which(ind.data$sex=="A")]
ind.data$sex<-as.factor(ind.data$sex)
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()+theme_bw()+ylab("Outdegree towards female")+facet_grid(~sex)
ind.data$sex<-as.factor(as.character(ind.data$sex))
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()+theme_bw()+ylab("Outdegree towards female")+facet_grid(~sex)
ind.data<-ind.data[-which(ind.data$sex=="A")]
which(ind.data$sex=="A")
-which(ind.data$sex=="A")
ind.data<-ind.data[-which(ind.data$sex=="A"),]
-which(ind.data$sex=="A")
ind.data$sex<-as.factor(as.character(ind.data$sex))
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()+theme_bw()+ylab("Outdegree towards female")+facet_grid(~sex)
ggplot(ind.data,aes(x=factor(day),y=indegree_from_F,col=manip))+geom_boxplot()+theme_bw()+ylab("Indegree from female")+facet_grid(~sex)
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_M,col=manip))+geom_boxplot()+theme_bw()+ylab("Outdegree towards males")+facet_grid(~sex)
ggplot(ind.data,aes(x=factor(day),y=indegree_from_M,col=manip))+geom_boxplot()+theme_bw()+ylab("indegree from male")+facet_grid(~sex)
pdf('ind_data.pdf')
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()+theme_bw()+ylab("Outdegree towards female")+facet_grid(~sex)
ggplot(ind.data,aes(x=factor(day),y=indegree_from_F,col=manip))+geom_boxplot()+theme_bw()+ylab("Indegree from female")+facet_grid(~sex)
ggplot(ind.data,aes(x=factor(day),y=outdegree_from_M,col=manip))+geom_boxplot()+theme_bw()+ylab("Outdegree towards males")+facet_grid(~sex)
ggplot(ind.data,aes(x=factor(day),y=indegree_from_M,col=manip))+geom_boxplot()+theme_bw()+ylab("indegree from male")+facet_grid(~sex)
dev.off()
getwd()
day.1.data<-filter(ind.data,day==1)
day.1.data$sub_group<-as.character(day.1.data$community)
in.group<-vector()
for(i in 1:nrow(day.1.data)){
if(day.1.data$sub_group[i]=="A"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="A2M1"]) in.group<-c(in.group,"in.group") else
if(day.1.data$sub_group[i]=="A"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="A2M1"]) in.group<-c(in.group,"out.group") else
if(day.1.data$sub_group[i]=="B"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="B3M1"]) in.group<-c(in.group,"in.group") else
if(day.1.data$sub_group[i]=="B"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="B3M1"]) in.group<-c(in.group,"out.group") else
if(day.1.data$sub_group[i]=="C"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="C5M1"]) in.group<-c(in.group,"in.group") else
if(day.1.data$sub_group[i]=="C"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="C5M1"]) in.group<-c(in.group,"out.group") else
if(day.1.data$sub_group[i]=="D"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="D1M1"]) in.group<-c(in.group,"in.group") else
if(day.1.data$sub_group[i]=="D"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="D1M1"]) in.group<-c(in.group,"out.group") else
if(day.1.data$sub_group[i]=="E"&day.1.data$wtcom[i]==day.1.data$wtcom[day.1.data$unique=="E5M1"]) in.group<-c(in.group,"in.group") else
if(day.1.data$sub_group[i]=="E"&day.1.data$wtcom[i]!=day.1.data$wtcom[day.1.data$unique=="E5M1"]) in.group<-c(in.group,"out.group")
}
tojoin<-data.frame(unique=day.1.data$unique,in.group)
ind.data2<-left_join(ind.data,tojoin,by="unique")
ggplot(ind.data2,aes(x=factor(day),y=indegree_from_M,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)
pdf('in_or_out_group.pdf')
ggplot(ind.data2,aes(x=factor(day),y=indegree_from_M,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)
dev.off()
ggplot(ind.data2,aes(x=factor(day),y=indegree_from_M,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)+ylab('indegree from males')
ggplot(ind.data2,aes(x=factor(day),y=outdegree_from_M,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)+ylab('outdegree towards males')
ggplot(ind.data2,aes(x=factor(day),y=indegree_from_F,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)+ylab('indegree from females')
ggplot(ind.data2,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)+ylab('outdegree towards females')
pdf('in_or_out_group.pdf')
ggplot(ind.data2,aes(x=factor(day),y=indegree_from_M,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)+ylab('indegree from males')
ggplot(ind.data2,aes(x=factor(day),y=outdegree_from_M,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)+ylab('outdegree towards males')
ggplot(ind.data2,aes(x=factor(day),y=indegree_from_F,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)+ylab('indegree from females')
ggplot(ind.data2,aes(x=factor(day),y=outdegree_from_F,col=manip))+geom_boxplot()+facet_wrap(sex~in.group)+ylab('outdegree towards females')
dev.off()
